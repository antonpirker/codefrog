name: Build - Test - Publish

on:
  push:
    branches:
      - master
      - 'release/*'

jobs:
  build-test-publish:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@master

    - name: Build container
      uses: antonpirker/Publish-Docker-Github-Action@master
      with:
        name: codefroghq/codefrog
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        push: false
        snapshot: true

# TODO: fix the problem, that I need a Postgres Database to run the tests and then reactivate.
#    - name: Run tests in container
#      run: |
#        docker run \
#          --env "SECRET_KEY=not_so_important_during_testing" \
#          --env "DATABASE_URL=sqlite:////tmp/my-tmp-sqlite.db" \
#          codefroghq/codefrog \
#          ./manage.py test

    - name: Publish container to DockerHub
      uses: antonpirker/Publish-Docker-Github-Action@master
      with:
        name: codefroghq/codefrog
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        build: false

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

# TODO: add a step to run a deployment of the new code to production.
    - name: Deploy to production
      if: contains(github.ref, 'master')
      run: |
        echo "deploy to production"
