version: "3.7"
services:
    gunicorn:
        image: codefroghq/codefrog:latest
        command: ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "1", "--threads", "8", "wsgi:application"]
        restart: unless-stopped
        build:
            context: .
        ports:
            - "8000:8000"
        depends_on:
            - redis
        links:
            - redis
        env_file:
          - ./.env
        volumes:
            - project_source_code:/project_source_code
        labels:
            com.datadoghq.ad.logs: >
                [{
                    "source": "gunicorn",
                    "service": "codefrog",
                    "log_processing_rules": [{
                        "type": "multi-line",
                        "name": "new_log_start_with_date",
                        "pattern": "\d{4}\-(0?[1-9]|1[012])\-(0?[1-9]|[12][0-9]|3[01])"
                    }]
                }]

    celery_worker:
        image: codefroghq/codefrog:latest
        command: ["celery", "worker", "--app", "core", "--queues", "low,medium,high,celery", "--loglevel", "INFO", "--pidfile", "/tmp/celery-worker.pid", "-Ofair"]
        restart: unless-stopped
        build:
            context: .
        depends_on:
            - redis
        links:
            - redis
        environment:
            - C_FORCE_ROOT=true
        env_file:
          - ./.env
        volumes:
            - project_source_code:/project_source_code
        labels:
            com.datadoghq.ad.logs: '[{"source": "celery", "service": "codefrog"}]'

    celery_beat:
        image: codefroghq/codefrog:latest
        command: ["celery", "beat", "--app", "core", "--loglevel", "INFO", "--pidfile", "/tmp/celery-beat.pid", "--schedule", "/tmp/celery-beat-schedule.db"]
        restart: unless-stopped
        build:
            context: .
        depends_on:
            - redis
        links:
            - redis
        environment:
            - C_FORCE_ROOT=true
        env_file:
          - ./.env
        volumes:
            - project_source_code:/project_source_code
        labels:
            com.datadoghq.ad.logs: '[{"source": "celery-beat", "service": "codefrog"}]'

    celery_flower:
        image: codefroghq/codefrog:latest
        command: ["celery", "flower", "--app", "core", "--port=5555"]
        restart: unless-stopped
        build:
            context: .
        ports:
            - "5555:5555"
        depends_on:
            - redis
        links:
            - redis
        env_file:
          - ./.env

    redis:
        image: redis:5-buster
        command: ["redis-server", "--appendonly", "yes"]
        restart: unless-stopped
        volumes:
            - redis_data:/data

volumes:
    redis_data:
    project_source_code:
