# Generated by Django 2.2 on 2020-02-11 20:50

from django.db import migrations
from django.db.utils import IntegrityError


def up(apps, schema_editor):
    Project = apps.get_model('core', 'Project')

    try:
        Project.objects.create(
            name='Elasticsearch',
            slug='elasticsearch',
            private=False,
            active=True,
            source='github',
            git_url='https://github.com/elastic/elasticsearch',
            external_services={
                'github_issues': {
                    'repo_owner': 'elastic',
                    'repo_name': 'elasticsearch',
                },
            },
            source_tree_metrics={},
        )
    except IntegrityError:
        pass

    try:
        Project.objects.create(
            name='Kubernetes',
            slug='kubernetes',
            private=False,
            active=True,
            source='github',
            git_url='https://github.com/kubernetes/kubernetes.git',
            external_services={
                'github_issues': {
                    'repo_owner': 'kubernetes',
                    'repo_name': 'kubernetes',
                },
            },
            source_tree_metrics={},
        )
    except IntegrityError:
        pass

    try:
        Project.objects.create(
            name='Visual Studio Code',
            slug='vscode',
            private=False,
            active=True,
            source='github',
            git_url='https://github.com/Microsoft/vscode.git',
            external_services={
                'github_issues': {
                    'repo_owner': 'Microsoft',
                    'repo_name': 'vscode',
                },
            },
            source_tree_metrics={},
        )
    except IntegrityError:
        pass


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(up, reverse_code=migrations.RunPython.noop),
    ]
